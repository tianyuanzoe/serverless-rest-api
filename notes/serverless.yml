

service: notes-api
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  

plugins:
  - serverless-iam-roles-per-function


functions:
  authorizer:
    handler: authorizer.handler
    environment: 
      COGNITO_USERPOOL_ID: !Ref cognitoUserPool
      COGNITO_WEB_CLIENT_ID: !Ref cognitoUserPoolWebClient 

  createNote:
    handler: handler.createNote
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:PutItem
        Resource: !GetAtt notesTable.Arn
    events: 
      - http:
          method: post
          path: notes
          authorizer: authorizer

  updateNote:
    handler: handler.updateNote
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:UpdateItem
        Resource: !GetAtt notesTable.Arn
    events: 
      - http:
          method: put
          path: notes/{id}  
          authorizer: authorizer

  deleteNote:
    handler: handler.deleteNote
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:DeleteItem
        Resource: !GetAtt notesTable.Arn
    environment:
      NOTES_TABLE_NAME: !Ref notesTable 
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1   
    events: 
      - http:
          method: delete
          path: notes/{id}
          authorizer: authorizer  

  getAllNote:
    handler: handler.getAllNote
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:Scan
        Resource: !GetAtt notesTable.Arn
    environment:
      NOTES_TABLE_NAME: !Ref notesTable 
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events: 
      - http:
          method: get
          path: notes
          authorizer: 
            name: userpool_authorizer
            arn: ${ssm:/notes/${self:provider.stage}/userPoolArn}            

# you can add CloudFormation resource templates here
resources:
  Resources:
    ${file(resources.yml)}
   




 