# Notes dynamodb table
notesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: notes-${self:provider.stage}
    BillingMode: PAY_PER_REQUEST
    AttributeDefinitions: 
      - AttributeName: notesId
        AttributeType: S
    KeySchema:  
      - AttributeName: notesId
        KeyType: HASH

#cognito user pool
cognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: MyNotesUP-${self:provider.stage}

# User pool web client
cognitoUserPoolWebClient:
  Type: AWS::Cognito::UserPoolClient
  Properties: 
    UserPoolId: !Ref cognitoUserPool
    ClientName: web
    AllowedOAuthFlows: 
      - implicit
    AllowedOAuthFlowsUserPoolClient: true  
    AllowedOAuthScopes: 
      - phone
      - email
      - profile
      - openid
    CallbackURLs: 
      - http://localhost:3000  
    SupportedIdentityProviders:
      - COGNITO  


# User pool domain
cognitoUserPoolDomain:
  Type: AWS::Cognito::UserPoolDomain
  Properties: 
    UserPoolId: !Ref cognitoUserPool
    Domain: zoenotescd-${self:provider.stage}

# Application paramenter
userPoolArnParam:
  Type: AWS::SSM::Parameter
  Properties:
    Name: /notes/${self:provider.stage}/userPoolArn
    Type: String
    Value: !GetAtt cognitoUserPool.Arn
